// Apply the Java and Spring Boot plugins to the project
plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'com.github.spotbugs' version '4.4.0'
	id 'checkstyle'
}


apply plugin: 'com.github.spotbugs'


group = 'com.emse.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

// Declare the repositories that should be used to resolve dependencies
repositories {
	mavenCentral()
}

// Declare the dependencies for the project
dependencies {

	// Spring Boot dependencies for web services and data JPA
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Development-only dependency for Spring Boot devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Test dependencies for Spring Boot and JPA
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2:1.4.200'

	// Dependencies for JPA and H2 database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2'

	// Dependencies for Swagger documentation
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	// Dependency for JSON Web Token (JWT) support
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.0.0-beta.0'

	// Dependencies for Spring Security
	implementation("org.springframework.boot:spring-boot-starter-security")
	testImplementation("org.springframework.security:spring-security-test")
}

// Configure the test task to use JUnit Platform
tasks.named('test') {
	useJUnitPlatform()
}


task unitTest(type: Test) {
	useJUnitPlatform()
	onlyIf {
		def status = "git status --porcelain".execute().text
		status.contains("src/main/java")
	}
}

task integrationTest(type: Test) {
	exclude '**/IntegrationTest*.class'
	exclude '**/integration/**'
}


// Make the test task a dependency of the build task
build.dependsOn unitTest

// Configure the SpotBugs plugin
spotbugs {
	toolVersion = '4.4.0'
	ignoreFailures = false
	excludeFilter = file("$rootDir/config/spotbugs-exclude-filter.xml")
}

// Configure the Checkstyle plugin
checkstyle {
	toolVersion = '8.36'
	configFile = file("$rootDir/config/checkstyle.xml")
	ignoreFailures = false // set to true to ignore failures)
}

//
tasks {
	checkstyleMain {
		ignoreFailures = false
	}
	checkstyleTest {
		ignoreFailures = false
	}
}

tasks {
	spotbugsMain {
		ignoreFailures = false
	}
	spotbugsTest {
		ignoreFailures = false
	}
}

check.dependsOn spotbugsMain, spotbugsTest, checkstyleMain, checkstyleTest


